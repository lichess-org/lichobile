{
  "name": "vinyl-source-stream",
  "description": "Use conventional text streams at the start of your gulp or vinyl pipelines",
  "version": "0.1.1",
  "main": "index.js",
  "browser": "index.js",
  "dependencies": {
    "vinyl": "~0.2.2",
    "through2": "~0.3.0"
  },
  "devDependencies": {
    "tape": "~2.3.2",
    "vinyl-map": "0.0.1",
    "gulp-rename": "~0.2.1",
    "gulp": "~3.3.0"
  },
  "scripts": {},
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/vinyl-source-stream"
  },
  "bugs": {
    "url": "https://github.com/hughsk/vinyl-source-stream/issues"
  },
  "homepage": "https://github.com/hughsk/vinyl-source-stream",
  "keywords": [
    "vinyl",
    "gulp",
    "gulpfriendly",
    "vanilla",
    "stream",
    "string",
    "text",
    "classic"
  ],
  "readme": "# vinyl-source-stream [![Flattr this!](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=hughskennedy&url=http://github.com/hughsk/vinyl-source-stream&title=vinyl-source-stream&description=hughsk/vinyl-source-stream%20on%20GitHub&language=en_GB&tags=flattr,github,javascript&category=software)[![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\nUse conventional text streams at the start of your\n[gulp](http://github.com/gulpjs/gulp) or\n[vinyl](http://github.com/wearefractal/vinyl) pipelines, making for nicer\ninteroperability with the existing npm stream ecosystem.\n\nTake, for example, [browserify](http://browserify.org/). There's the\n[gulp-browserify](https://github.com/deepak1556/gulp-browserify) and\n[gulpify](https://github.com/hughsk/gulpify) plugins, which you can use in\ncombination with gulp to get browserify working in your build. Unfortunately,\nthese plugins come with additional overhead: an extra GitHub repository, npm\nmodule, maintainer, tests, semantics, etc. It's much simpler\nin this case to use the original module directly where you can, which is what\n`vinyl-source-stream` handles for you.\n\n## Usage ##\n\n[![vinyl-source-stream](https://nodei.co/npm/vinyl-source-stream.png?mini=true)](https://nodei.co/npm/vinyl-source-stream)\n\nOur previous example, browserify, has a streaming API for its output bundles\nwhich you can use directly. This module is just a bridge that makes it\nsimple to use conventional text streams such as this in combination with gulp.\nHere's an example of using `vinyl-source-stream` and `browserify`, compared to\nusing `gulpify`:\n\n``` javascript\nvar source = require('vinyl-source-stream')\nvar streamify = require('gulp-streamify')\nvar browserify = require('browserify')\nvar uglify = require('gulp-uglify')\nvar gulpify = require('gulpify')\nvar gulp = require('gulp')\n\n// using gulpify:\ngulp.task('gulpify', function() {\n  gulp.src('index.js')\n    .pipe(gulpify())\n    .pipe(uglify())\n    .pipe(gulp.dest('./bundle.js'))\n})\n\n// using vinyl-source-stream:\ngulp.task('browserify', function() {\n  var bundleStream = browserify('index.js').bundle()\n\n  bundleStream\n    .pipe(source('index.js'))\n    .pipe(streamify(uglify()))\n    .pipe(gulp.dest('./bundle.js'))\n})\n```\n\nNot all that different, really! The nice thing here is that you're getting the\nup-to-date browserify API and don't have to worry about the plugin's available\nfunctionality. Of course, these same benefits apply for any readable text\nstream you can find on npm.\n\n## API ##\n\n### `stream = sourceStream([filename])` ###\n\nCreates a through stream which takes text as input, and emits a single\nvinyl file instance for streams down the pipeline to consume.\n\n`filename` is a \"pretend\" filename to use for your file, which some streams\nmight use to determine various factors such as the final filename of your file.\nIt should be a string, and though recommended, using this argument is optional.\n\n## License ##\n\nMIT. See [LICENSE.md](http://github.com/hughsk/vinyl-source-stream/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "vinyl-source-stream@0.1.1",
  "dist": {
    "shasum": "a53a4f21a07a234695e04c2703f9f1b5b9084595"
  },
  "_from": "vinyl-source-stream@0.1.1",
  "_resolved": "https://registry.npmjs.org/vinyl-source-stream/-/vinyl-source-stream-0.1.1.tgz"
}
